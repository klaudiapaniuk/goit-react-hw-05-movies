{"version":3,"file":"static/js/119.c326a23a.chunk.js","mappings":"yNA0CA,UArCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,6GAEyBC,EAAAA,EAAAA,gBAAwBH,GAFjD,OAESF,EAFT,OAGGC,EAAWD,GAHd,gDAKGM,QAAQC,IAAR,MALH,wDAAD,EAQD,GAAE,CAACL,KAGF,SAAC,EAAAM,SAAD,WACE,yBACGR,EAAQS,OAAS,GAChB,wBACGT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACX,2BACE,wBACE,oCAAYF,QAEd,uBAAIE,MAJGD,EADE,OAUf,wEAKT,C,8DCtCKE,EAAU,mCACVC,EAAW,+BAEXC,EAAgB,mCAAG,6GAEEC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAA4C,CACjEG,OAAQ,CACNC,QAASL,KAJQ,cAEfM,EAFe,gBAORA,EAASC,KAAKC,QAPN,wEASrBhB,QAAQC,IAAR,MATqB,yDAAH,qDAahBgB,EAAY,mCAAG,WAAMX,GAAN,gGAEMK,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BH,EAA/B,YAA6C,CAClEM,OAAQ,CACNC,QAASL,KAJI,cAEXM,EAFW,gBAOJA,EAASC,KAPL,wEASjBf,QAAQC,IAAR,MATiB,yDAAH,sDAaZiB,EAAe,mCAAG,WAAMZ,GAAN,gGAEGK,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BH,EAA/B,mBAAoD,CACzEM,OAAQ,CACNC,QAASL,KAJO,cAEdM,EAFc,gBAOPA,EAASC,KAAKC,QAPP,wEASpBhB,QAAQC,IAAR,MAToB,yDAAH,sDAafkB,EAAY,mCAAG,WAAMb,GAAN,gGAEMK,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BH,GAAM,CAC1DM,OAAQ,CACNC,QAASL,KAJI,cAEXM,EAFW,gBAOJA,EAASC,KAPL,wEASjBf,QAAQC,IAAR,MATiB,yDAAH,sDAaZmB,EAAgB,mCAAG,WAAMC,GAAN,gGAEEV,EAAAA,EAAAA,IAAA,UAAaF,EAAb,yBAA8C,CACnEG,OAAQ,CACNS,MAAOA,EACPR,QAASL,KALQ,cAEfM,EAFe,gBAQRA,EAASC,KAAKC,QARN,wEAUrBhB,QAAQC,IAAR,MAVqB,yDAAH,sDAchBF,EAAU,CACdW,iBAAAA,EACAS,aAAAA,EACAF,aAAAA,EACAC,gBAAAA,EACAE,iBAAAA,GAEF,K","sources":["pages/reviews.jsx","utils/APImovies.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport dataAPI from '../utils/APImovies';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const reviews = await dataAPI.getMovieReviews(movieId);\n        setReviews(reviews);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <Fragment>\n      <div>\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map(({ author, id, content }) => (\n              <li key={id}>\n                <p>\n                  <b>Author: {author}</b>\n                </p>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '8c57aa16de6d4d7f2d4ddf4e537ebfb8';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingToday = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMovieCast = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?page=1`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMovieById = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie?&page=1`, {\n      params: {\n        query: query,\n        api_key: API_KEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst dataAPI = {\n  getTrendingToday,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMoviesByQuery,\n};\nexport default dataAPI;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","dataAPI","console","log","Fragment","length","map","author","id","content","API_KEY","BASE_URL","getTrendingToday","axios","params","api_key","response","data","results","getMovieCast","getMovieReviews","getMovieById","getMoviesByQuery","query"],"sourceRoot":""}