{"version":3,"file":"static/js/846.d0aa2096.chunk.js","mappings":"yNA8CA,UAzCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6GAEKC,EAAAA,EAAAA,aAAqBJ,GAF1B,OAEXK,EAFW,OAGjBN,EAAQM,EAAQP,MAHC,gDAKjBQ,QAAQC,IAAI,KAAMC,SALD,yDAAH,qDAQlBL,GACD,GAAE,CAACH,KAGF,SAAC,EAAAS,SAAD,WACE,0BACE,wBACGX,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACR,0BACGD,GACC,gBACEE,IAAG,yCAAoCF,GACvCG,IAAKL,EACLM,MAAM,SAGR,uCAEF,uBAAIN,KACJ,4CAAkBC,OAXXE,EADD,SAmBnB,C,8DC1CKI,EAAU,mCACVC,EAAW,+BAEXC,EAAgB,mCAAG,6GAEEC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAA4C,CACjEG,OAAQ,CACNC,QAASL,KAJQ,cAEfM,EAFe,gBAORA,EAASC,KAAKC,QAPN,wEASrBpB,QAAQC,IAAR,MATqB,yDAAH,qDAahBJ,EAAY,mCAAG,WAAMW,GAAN,gGAEMO,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BL,EAA/B,YAA6C,CAClEQ,OAAQ,CACNC,QAASL,KAJI,cAEXM,EAFW,gBAOJA,EAASC,KAPL,wEASjBnB,QAAQC,IAAR,MATiB,yDAAH,sDAaZoB,EAAe,mCAAG,WAAMb,GAAN,gGAEGO,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BL,EAA/B,mBAAoD,CACzEQ,OAAQ,CACNC,QAASL,KAJO,cAEdM,EAFc,gBAOPA,EAASC,KAAKC,QAPP,wEASpBpB,QAAQC,IAAR,MAToB,yDAAH,sDAafqB,EAAY,mCAAG,WAAMd,GAAN,gGAEMO,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BL,GAAM,CAC1DQ,OAAQ,CACNC,QAASL,KAJI,cAEXM,EAFW,gBAOJA,EAASC,KAPL,wEASjBnB,QAAQC,IAAR,MATiB,yDAAH,sDAaZsB,EAAgB,mCAAG,WAAMC,GAAN,gGAEET,EAAAA,EAAAA,IAAA,UAAaF,EAAb,yBAA8C,CACnEG,OAAQ,CACNQ,MAAOA,EACPP,QAASL,KALQ,cAEfM,EAFe,gBAQRA,EAASC,KAAKC,QARN,wEAUrBpB,QAAQC,IAAR,MAVqB,yDAAH,sDAchBH,EAAU,CACdgB,iBAAAA,EACAQ,aAAAA,EACAzB,aAAAA,EACAwB,gBAAAA,EACAE,iBAAAA,GAEF,K","sources":["pages/cast.jsx","utils/APImovies.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport dataAPI from '../utils/APImovies';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const getCast = await dataAPI.getMovieCast(movieId);\n        setCast(getCast.cast);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getMovieCast();\n  }, [movieId]);\n\n  return (\n    <Fragment>\n      <div>\n        <ul>\n          {cast.map(({ name, character, profile_path, id }) => (\n            <li key={id}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                  width=\"200\"\n                />\n              ) : (\n                <div>{`No photo`}</div>\n              )}\n              <p>{name}</p>\n              <p>{`Character: ${character}`}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '8c57aa16de6d4d7f2d4ddf4e537ebfb8';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingToday = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMovieCast = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?page=1`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMovieById = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie?&page=1`, {\n      params: {\n        query: query,\n        api_key: API_KEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst dataAPI = {\n  getTrendingToday,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMoviesByQuery,\n};\nexport default dataAPI;\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","dataAPI","getCast","console","log","message","Fragment","map","name","character","profile_path","id","src","alt","width","API_KEY","BASE_URL","getTrendingToday","axios","params","api_key","response","data","results","getMovieReviews","getMovieById","getMoviesByQuery","query"],"sourceRoot":""}