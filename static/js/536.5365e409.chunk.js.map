{"version":3,"file":"static/js/536.5365e409.chunk.js","mappings":"iOAsDA,UAjDe,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,GAiB3C,OARAC,EAAAA,EAAAA,YAAU,WACM,KAAVF,IACJ,iBAAC,oGAC6BG,EAAAA,EAAAA,iBAAyBH,GADtD,OACOI,EADP,OAECV,EAAUU,GAFX,0CAAD,EAID,GAAE,CAACJ,KAGF,UAAC,EAAAK,SAAD,YACE,kBAAMC,SAjBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfb,EAAgB,CAAEG,MAAOO,EAAEI,OAAO,GAAGC,QACrCH,EAAKI,OACN,EAYG,WACE,kBACEC,KAAK,OACLC,KAAK,QACLC,WAAS,EACTC,aAAa,MACbC,YAAY,GACZC,UAAQ,KAEV,mBAAQL,KAAK,SAAb,wBAEF,0BACE,wBACGrB,EAAO2B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAM3B,GAA1C,SACGwB,KAFID,EADC,UAWrB,C,8DClDKK,EAAU,mCACVC,EAAW,+BAEXC,EAAgB,mCAAG,6GAEEC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAA4C,CACjEG,OAAQ,CACNC,QAASL,KAJQ,cAEfM,EAFe,gBAORA,EAASC,KAAKC,QAPN,wEASrBC,QAAQC,IAAR,MATqB,yDAAH,qDAahBC,EAAY,mCAAG,WAAMhB,GAAN,gGAEMQ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BN,EAA/B,YAA6C,CAClES,OAAQ,CACNC,QAASL,KAJI,cAEXM,EAFW,gBAOJA,EAASC,KAPL,wEASjBE,QAAQC,IAAR,MATiB,yDAAH,sDAaZE,EAAe,mCAAG,WAAMjB,GAAN,gGAEGQ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BN,EAA/B,mBAAoD,CACzES,OAAQ,CACNC,QAASL,KAJO,cAEdM,EAFc,gBAOPA,EAASC,KAAKC,QAPP,wEASpBC,QAAQC,IAAR,MAToB,yDAAH,sDAafG,EAAY,mCAAG,WAAMlB,GAAN,gGAEMQ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BN,GAAM,CAC1DS,OAAQ,CACNC,QAASL,KAJI,cAEXM,EAFW,gBAOJA,EAASC,KAPL,wEASjBE,QAAQC,IAAR,MATiB,yDAAH,sDAaZI,EAAgB,mCAAG,WAAMxC,GAAN,gGAEE6B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,yBAA8C,CACnEG,OAAQ,CACN9B,MAAOA,EACP+B,QAASL,KALQ,cAEfM,EAFe,gBAQRA,EAASC,KAAKC,QARN,wEAUrBC,QAAQC,IAAR,MAVqB,yDAAH,sDAchBjC,EAAU,CACdyB,iBAAAA,EACAW,aAAAA,EACAF,aAAAA,EACAC,gBAAAA,EACAE,iBAAAA,GAEF,K","sources":["pages/movies.jsx","utils/APImovies.jsx"],"sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nimport dataAPI from '../utils/APImovies';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: e.target[0].value });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (query === '') return;\n    (async () => {\n      const moviesByQuery = await dataAPI.getMoviesByQuery(query);\n      setMovies(moviesByQuery);\n    })();\n  }, [query]);\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          autoFocus\n          autoComplete=\"off\"\n          placeholder=\"\"\n          required\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <div>\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '8c57aa16de6d4d7f2d4ddf4e537ebfb8';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingToday = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMovieCast = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?page=1`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMovieById = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie?&page=1`, {\n      params: {\n        query: query,\n        api_key: API_KEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst dataAPI = {\n  getTrendingToday,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMoviesByQuery,\n};\nexport default dataAPI;\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","dataAPI","moviesByQuery","Fragment","onSubmit","e","preventDefault","form","currentTarget","target","value","reset","type","name","autoFocus","autoComplete","placeholder","required","map","id","title","to","state","from","API_KEY","BASE_URL","getTrendingToday","axios","params","api_key","response","data","results","console","log","getMovieCast","getMovieReviews","getMovieById","getMoviesByQuery"],"sourceRoot":""}