{"version":3,"file":"static/js/804.595357d1.chunk.js","mappings":"iOAqFA,UAhFqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0CE,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAa9C,OAXAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6GAEuBC,EAAAA,EAAAA,aAAqBZ,GAF5C,OAESa,EAFT,OAGGT,EAAiB,CAACS,IAHrB,gDAKGC,QAAQC,IAAR,MALH,wDAAD,EAQD,GAAE,CAACf,KAGF,UAAC,EAAAgB,SAAD,YACE,4BACE,SAAC,KAAD,CAAMC,GAAIV,EAAOW,QAAjB,UACE,0CAEDf,EAAcgB,KACb,gBACEC,EADF,EACEA,YACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,SACAC,EANF,EAMEA,OACAC,EAPF,EAOEA,GACAC,EARF,EAQEA,QARF,OAUE,2BACGP,GACC,gBACEQ,IAAG,yCAAoCR,GACvCS,IAAG,UAAKF,MAGV,0CAGF,4BACE,0BACGN,EADH,KACYC,EAAaQ,MAAM,EAAG,GADlC,QAGA,wCAAgBC,KAAKC,MAAqB,GAAfT,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,wBACGC,EAAON,KAAI,gBAAGO,EAAH,EAAGA,GAAIO,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALP,EADC,WAnBRA,EAVZ,KAqCF,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMT,GAAG,OAAT,mBADM,SAGR,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,sBADM,qBAMd,SAAC,EAAAiB,SAAD,WACE,SAAC,KAAD,QAIP,C,8DCjFKC,EAAU,mCACVC,EAAW,+BAEXC,EAAgB,mCAAG,6GAEEC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAA4C,CACjEG,OAAQ,CACNC,QAASL,KAJQ,cAEfM,EAFe,gBAORA,EAASC,KAAKC,QAPN,wEASrB7B,QAAQC,IAAR,MATqB,yDAAH,qDAahB6B,EAAY,mCAAG,WAAMlB,GAAN,gGAEMY,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BV,EAA/B,YAA6C,CAClEa,OAAQ,CACNC,QAASL,KAJI,cAEXM,EAFW,gBAOJA,EAASC,KAPL,wEASjB5B,QAAQC,IAAR,MATiB,yDAAH,sDAaZ8B,EAAe,mCAAG,WAAMnB,GAAN,gGAEGY,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BV,EAA/B,mBAAoD,CACzEa,OAAQ,CACNC,QAASL,KAJO,cAEdM,EAFc,gBAOPA,EAASC,KAAKC,QAPP,wEASpB7B,QAAQC,IAAR,MAToB,yDAAH,sDAaf+B,EAAY,mCAAG,WAAMpB,GAAN,gGAEMY,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BV,GAAM,CAC1Da,OAAQ,CACNC,QAASL,KAJI,cAEXM,EAFW,gBAOJA,EAASC,KAPL,wEASjB5B,QAAQC,IAAR,MATiB,yDAAH,sDAaZgC,EAAgB,mCAAG,WAAMC,GAAN,gGAEEV,EAAAA,EAAAA,IAAA,UAAaF,EAAb,yBAA8C,CACnEG,OAAQ,CACNS,MAAOA,EACPR,QAASL,KALQ,cAEfM,EAFe,gBAQRA,EAASC,KAAKC,QARN,wEAUrB7B,QAAQC,IAAR,MAVqB,yDAAH,sDAchBH,EAAU,CACdyB,iBAAAA,EACAS,aAAAA,EACAF,aAAAA,EACAC,gBAAAA,EACAE,iBAAAA,GAEF,K","sources":["pages/movieDetails.jsx","utils/APImovies.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, Suspense, Fragment } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\n\nimport dataAPI from '../utils/APImovies';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [selectedMovie, setSelectedMovie] = useState([]);\n  const location = useLocation();\n  const goBack = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const movie = await dataAPI.getMovieById(movieId);\n        setSelectedMovie([movie]);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <Fragment>\n      <div>\n        <Link to={goBack.current}>\n          <button>Go back</button>\n        </Link>\n        {selectedMovie.map(\n          ({\n            poster_path,\n            title,\n            release_date,\n            vote_average,\n            overview,\n            genres,\n            id,\n            tagline,\n          }) => (\n            <div key={id}>\n              {poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={`${tagline}`}\n                />\n              ) : (\n                <div>{`No photo :(`}</div>\n              )}\n\n              <div>\n                <h2>\n                  {title} ({release_date.slice(0, 4)})\n                </h2>\n                <p>User Score: {Math.round(vote_average * 10)}%</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h4>Genres</h4>\n                <ul>\n                  {genres.map(({ id, name }) => (\n                    <li key={id}>{name}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          )\n        )}\n        <div>\n          <p>Additional information</p>\n          <ul>\n            <li key=\"cast\">\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li key=\"reviews\">\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </Fragment>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '8c57aa16de6d4d7f2d4ddf4e537ebfb8';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingToday = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMovieCast = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?page=1`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMovieById = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return await response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie?&page=1`, {\n      params: {\n        query: query,\n        api_key: API_KEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst dataAPI = {\n  getTrendingToday,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMoviesByQuery,\n};\nexport default dataAPI;\n"],"names":["movieId","useParams","useState","selectedMovie","setSelectedMovie","location","useLocation","goBack","useRef","state","from","useEffect","dataAPI","movie","console","log","Fragment","to","current","map","poster_path","title","release_date","vote_average","overview","genres","id","tagline","src","alt","slice","Math","round","name","Suspense","API_KEY","BASE_URL","getTrendingToday","axios","params","api_key","response","data","results","getMovieCast","getMovieReviews","getMovieById","getMoviesByQuery","query"],"sourceRoot":""}